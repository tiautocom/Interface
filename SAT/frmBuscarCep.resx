<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>